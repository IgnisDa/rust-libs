name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: Which project to build and publish
        options:
          - connection-string-parser

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  determine-release:
    if: github.repository_owner == 'IgnisDa'
    runs-on: ubuntu-20.04
    outputs:
      TAG: ${{ steps.get-tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-dasel
        name: Setup dasel
      - name: Get tag
        id: get-tag
        run: |
          version=$(dasel --file crates/${{ github.event.inputs.project }}/Cargo.toml '.package.version')
          echo "TAG=${{ github.event.inputs.project }}-v$version" >> $GITHUB_OUTPUT
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.get-tag.outputs.TAG }}
          force_push_tag: true

  publish-to-crates-io:
    needs: determine-release
    if: github.repository_owner == 'IgnisDa'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: cargo publish --package "${{ github.event.inputs.project }}" --locked
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'IgnisDa'
    needs:
      - determine-release
      - publish-to-crates-io
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: aarch64-apple-darwin
            os: macos-11
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
            os: macos-10.15
          - target: x86_64-pc-windows-msvc
            os: windows-2019
    runs-on: ${{ matrix.os || 'ubuntu-18.04' }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: refs/tags/${{ needs.determine-release.outputs.TAG }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ github.event.inputs.project }}
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          ref: refs/tags/${{ needs.determine-release.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
